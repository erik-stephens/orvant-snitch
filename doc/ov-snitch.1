.\" Manpage for ov-snitch.
.\" Contact dev@orvant.com to correct errors or typos.
.TH man 1 "07 November 2012" "1.0" "ov-snitch manual"
.SH NAME
ov-snitch \- log & block packets by executable program
.SH SYNOPSIS
\fBov-snitch\fR [\fIoptions\fR]
.SH DESCRIPTION
ov-snitch is a firewall utility that will log which destination hosts & ports each process is communicating with.  Instead of logging the process ID, which is not particularly useful for most cases, the program name will be logged.  Some ways this information can be useful:
.RS 4
.sp
Identify programs that leak potentially sensitive information.  Some programs may be more nefarious than others.  Whatever the motives of the program, users should be able to control which information leaves their systems.
.sp
Disable peer-to-peer (P2P) functionality.  Some programs may use P2P communication as a way to provide services while falling back to a more traditional client-server approach if there are no available peers.  P2P communication could provide better performance, but the cost is at greater exposure to the security of your system.
.sp
Restrict access to a service regardless of the ports & network interfaces it may listen on.
.SH OPTIONS
The options which apply to the \fBov-snitch\fR command are:
.PP
\fB\-t\fR
.RS 4
Run the automated tests.
.RE
.PP
\fB\-c\fR \fICFG_FILE\fR
.RS 4
Use the given configuration file.  With no configuration, ov-snitch will only log packet & program info to syslog.  Rules can be defined in a config file (\fB-c\fR) to deny packets based on destination address, destination port, and executable program name.
.SH NOTES
If there is no user-space program such as ov-snitch processing the queue, then the packets sent to the netfilter queue will hang and eventually timeout.
.sp
It is not recommended to have critical traffic go through a user-space process such as this.  Connectivity could suffer considerably if anything goes wrong, which is much more probable than when just the kernel is processing the packets.  
.SH SETUP
.SS iptables
In order for ov-snitch to log the traffic for a program, packets will need to be sent to a user-space queue for processing.  To send all packets for new connections to ov-snitch for processing:
.RS 4
.sp
iptables -A OUTPUT -m state --state NEW -j NFQUEUE
.RE
.sp
You might not want to send all new connections to user space for processing.  With iptables, there is most likely a way to meet your specific needs and only have ov-snitch process the desired packets.
.RE
.SS syslog
ov-snitch will log the following fields, separated by '|', to syslog using a process name of 'ov-snitch':

  * verdict - 'allowed' or 'denied'
  * snitch time - milliseconds packet was in ov-snitch's queue
  * protocol - 'tcp' or 'udp'
  * destination address - ip address
  * destination port - port number, may be empty
  * source address - ip address
  * source port - port number, may be empty
  * program name - full path to program executable
  * inode
.SH SEE ALSO
ov-snitch.conf(5), iptables(8)
.SH BUGS
No known bugs.
.SH CREDIT
The development of ov-snitch was inspired by the Little Snitch application for OS X.  There is something similar for Linux called Leopard Flower (lpfw).  ov-snitch is not concerned with any interactive & graphical features.
.sp
ov-snitch rests on the shoulders of at least these giants: scapy and the python bindings to netfilter's nfqueue api.  Without these, this program would be considerably more complex.
.SH COPYRIGHT
Copyright (C) 2012 Orvant, Inc. <dev@orvant.com>.  All rights reserved.  Please refer to the copyright file for more details.
